/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EssenceClasses.EmployeePost;

import java.sql.Connection;
import java.util.List;
import EssenceClasses.newpackage.EmployeePost;
import EssenceClasses.newpackage.Post;
import EssenceClasses.newpackage.Employee;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.text.AbstractDocument;

/**
 *
 * @author Acer
 */
public class NewEpmloyeePost extends javax.swing.JDialog {

    Connection c;
    EmployeePost editItem;
    List<Employee> employees;
    List<Post> posts;

    /**
     * Creates new form NewQuestion
     *
     * @param parent
     * @param modal
     * @param c
     */
    public NewEpmloyeePost(java.awt.Frame parent, boolean modal, Connection c) {
        super(parent, modal);
        initComponents();
        entryEmployeePost();
        this.c = c;
        employees = new ArrayList<>();
        posts = new ArrayList<>();

    }

    public NewEpmloyeePost(java.awt.Frame parent, boolean modal, Connection c, EmployeePost u) {
        super(parent, modal);
        initComponents();
        entryEmployeePost();
        this.c = c;
        editItem = u;
        fillFields();
    }
    public void entryEmployeePost(){
        employees = new ArrayList<>();
        posts = new ArrayList<>();

        try {
            Statement statement = c.createStatement();
            ResultSet rs = statement.executeQuery("SELECT * FROM employee");
            while (rs.next()) {
                Employee item = new Employee(rs.getInt("tab_number"),
                        rs.getString("last_name"),
                        rs.getString("name"), rs.getString("middle_name"),
                        rs.getString("date_birth"),
                        rs.getString("education"), rs.getString("date_of_work"));
                employees.add(item);
            }
            employee.setModel(new DefaultComboBoxModel(employees.toArray()));

            rs = statement.executeQuery("SELECT * FROM post");
            while (rs.next()) {
                Post item = new Post(rs.getInt("kod"), rs.getString("name"),
                        rs.getInt("salary"));
                posts.add(item);
            }
            post.setModel(new DefaultComboBoxModel(posts.toArray()));

        } catch (SQLException ex) {
            
        }
    }

    private void fillFields() {

        for (Employee s : employees) {
            if (s.getTabNumber() == editItem.getEmployeeTabNumber()) {
                employee.setSelectedItem((s));
            }
        }
        for (Post s : posts) {
            if (s.getId() == editItem.getPostKod()) {
                post.setSelectedItem((s));
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        post = new javax.swing.JComboBox<>();
        ok = new javax.swing.JButton();
        employee = new javax.swing.JComboBox<>();

        jLabel1.setText("Должность");

        jLabel2.setText("Сотрудник");

        ok.setText("OK");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(post, 0, 111, Short.MAX_VALUE)
                            .addComponent(employee, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(ok)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(post, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(employee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(ok)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed

        try {
            // TODO add your handling code here:
            Statement statement = c.createStatement();
            if (editItem == null) {
                statement.executeUpdate("insert into employee_post "
                        + "(employee_tab_number,post_kod) values "
                        + "('" + ((Employee) employee.getSelectedItem()).getTabNumber()
                        + "','" + ((Post) post.getSelectedItem()).getId() + "');");
            } else {
                statement.executeUpdate("update employee_post set employee_tab_number='"
                        + ((Employee) employee.getSelectedItem()).getTabNumber() + "',post_kod='"
                        + ((Post) post.getSelectedItem()).getId()
                        + "' where id=" + editItem.getId() + ";");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(new JFrame(), ex.getMessage());
        }
        dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_okActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> employee;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton ok;
    private javax.swing.JComboBox<String> post;
    // End of variables declaration//GEN-END:variables
}
