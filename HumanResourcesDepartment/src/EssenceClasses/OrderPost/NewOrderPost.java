/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EssenceClasses.OrderPost;

import java.sql.Connection;
import java.util.List;
import EssenceClasses.newpackage.OrderPost;
import EssenceClasses.newpackage.Post;
import EssenceClasses.newpackage.ContentOrder;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Acer
 */
public class NewOrderPost extends javax.swing.JDialog {

    private Connection c;
    private OrderPost editItem;
    private List<Post> post;
    private List<ContentOrder> contentOrder;

    /**
     * Creates new form NewOrderPost
     *
     * @param parent
     * @param modal
     * @param c
     */
    public NewOrderPost(java.awt.Frame parent, boolean modal, Connection c) {
        super(parent, modal);
        initComponents();

        this.c = c;
        entryOrderPost();
    }

    public NewOrderPost(java.awt.Frame parent, boolean modal, Connection c, OrderPost u) {
        super(parent, modal);
        initComponents();

        this.c = c;
        editItem = u;
        entryOrderPost();
        fillFields();
    }
    private void entryOrderPost(){
        post = new ArrayList<>();
        contentOrder = new ArrayList<>();

        try {
            Statement statement = c.createStatement();
            ResultSet rs = statement.executeQuery("SELECT * FROM post");
            while (rs.next()) {
                Post item = new Post(rs.getInt("kod"), rs.getString("name"),
                        rs.getInt("salary"));
                post.add(item);
            }
            post_kod.setModel(new DefaultComboBoxModel(post.toArray()));

            rs = statement.executeQuery("select co.*, ao.name as action_order_name from content_order co left join action_order ao on co.order_action_id=ao.id;");
            while (rs.next()) {
                ContentOrder item = new ContentOrder(rs.getInt("id"),
                        rs.getInt("order_id"),
                        rs.getInt("empl_tab_number"),
                        rs.getInt("order_action_id"), rs.getString("action_order_name"));
                contentOrder.add(item);
            }
            content_order.setModel(new DefaultComboBoxModel(contentOrder.toArray()));

        } catch (SQLException ex) {

        }
    }

    private void fillFields() {

        for (Post s : post) {
            if (s.getId() == editItem.getPostKod()) {
                post_kod.setSelectedItem((s));
            }
        }
        for (ContentOrder s : contentOrder) {
            if (s.getId() == editItem.getContenOrderId()) {
                content_order.setSelectedItem((s));
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label = new javax.swing.JLabel();
        post_kod = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        content_order = new javax.swing.JComboBox<>();
        OK = new javax.swing.JButton();

        label.setText("Должность");

        jLabel1.setText("Содержание приказа");

        OK.setText("OK");
        OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(OK, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(content_order, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(post_kod, 0, 182, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label)
                    .addComponent(post_kod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(content_order, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(OK))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKActionPerformed
        try {
            // TODO add your handling code here:
            Statement statement = c.createStatement();
            if (editItem == null) {
                statement.executeUpdate("insert into order_post "
                        + "(post_kod,content_order) values "
                        + "('" + ((Post) post_kod.getSelectedItem()).getId() + "','"
                        + ((ContentOrder) content_order.getSelectedItem()).getId()
                        + "');");
            } else {
                statement.executeUpdate("update order_post set post_kod='"
                        + ((Post) post_kod.getSelectedItem()).getId()
                        + "',content_order='" + ((ContentOrder) content_order.getSelectedItem()).getId()
                        + "' where id=" + editItem.getId() + ";");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(new JFrame(), ex.getMessage());
            return;
        }
        dispose();
    }//GEN-LAST:event_OKActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OK;
    private javax.swing.JComboBox<String> content_order;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel label;
    private javax.swing.JComboBox<String> post_kod;
    // End of variables declaration//GEN-END:variables
}
